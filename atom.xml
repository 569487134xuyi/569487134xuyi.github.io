<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://569487134xuyi.github.io</id>
    <title>xuyi.blog</title>
    <updated>2019-08-27T08:29:09.078Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://569487134xuyi.github.io"/>
    <link rel="self" href="https://569487134xuyi.github.io/atom.xml"/>
    <subtitle>温故而知新</subtitle>
    <logo>https://569487134xuyi.github.io/images/avatar.png</logo>
    <icon>https://569487134xuyi.github.io/favicon.ico</icon>
    <rights>All rights reserved 2019, xuyi.blog</rights>
    <entry>
        <title type="html"><![CDATA[PVE设置]]></title>
        <id>https://569487134xuyi.github.io/post/pve-she-zhi</id>
        <link href="https://569487134xuyi.github.io/post/pve-she-zhi">
        </link>
        <updated>2019-08-27T08:10:38.000Z</updated>
        <content type="html"><![CDATA[<h2 id="换源">换源</h2>
<pre><code>rm /etc/apt/sources.list.d/pve-enterprise.list

wget http://mirrors.ustc.edu.cn/proxmox/debian/proxmox-ve-release-5.x.gpg -O /etc/apt/trusted.gpg.d/proxmox-ve-release-5.x.gpg

wget http://mirrors.ustc.edu.cn/proxmox/debian/proxmox-ve-release-6.x.gpg -O /etc/apt/trusted.gpg.d/proxmox-ve-release-6.x.gpg

echo 'deb http://mirrors.ustc.edu.cn/proxmox/debian buster pve-no-subscription'&gt;/etc/apt/sources.list.d/pve-install-repo.list

sed -i 's/ftp.debian.org/mirrors.163.com/g' /etc/apt/sources.list
sed -i 's/security.debian.org/mirrors.163.com\/debian-security/g' /etc/apt/sources.list

apt update
apt dist-upgrade
</code></pre>
<p>##去订阅弹窗</p>
<pre><code>sed -i &quot;s/data.status !== 'Active'/false/g&quot; /usr/share/javascript/proxmox-widget-toolkit/proxmoxlib.js
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[酸酸乳]]></title>
        <id>https://569487134xuyi.github.io/post/suan-suan-ru</id>
        <link href="https://569487134xuyi.github.io/post/suan-suan-ru">
        </link>
        <updated>2019-08-13T12:05:34.000Z</updated>
        <content type="html"><![CDATA[<p>#服务器推荐<br>
<a href="https://www.vultr.com">www.vultr.com</a><br>
#命令</p>
<pre><code>wget -N --no-check-certificate https://raw.githubusercontent.com/ToyoDAdoubi/doubi/master/ssr.sh &amp;&amp; chmod +x ssr.sh &amp;&amp; bash ssr.sh
</code></pre>
<p>按提示</p>
<pre><code>wget -N --no-check-certificate https://raw.githubusercontent.com/91yun/serverspeeder/master/serverspeeder-all.sh &amp;&amp; bash serverspeeder-all.sh
</code></pre>
<p>重启</p>
<pre><code>reboot
</code></pre>
<p>#windows客户端<br>
<a href="https://github.com/shadowsocksr-backup/shadowsocksr-csharp/releases">github地址</a></p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Docker]]></title>
        <id>https://569487134xuyi.github.io/post/docker</id>
        <link href="https://569487134xuyi.github.io/post/docker">
        </link>
        <updated>2019-06-09T09:00:00.000Z</updated>
        <summary type="html"><![CDATA[<p>docker 安装配置</p>
]]></summary>
        <content type="html"><![CDATA[<p>docker 安装配置</p>
<!-- more -->
<h1 id="docker-安装">docker 安装</h1>
<hr>
<h2 id="一键脚本安装">一键脚本安装</h2>
<pre><code class="language-bash">curl -fsSL https://get.docker.com -o get-docker.sh
sudo sh get-docker.sh
</code></pre>
<h2 id="手动安装">手动安装</h2>
<h3 id="卸载旧版本">卸载旧版本</h3>
<pre><code class="language-bash">sudo apt-get remove docker docker-engine docker.io containerd runc
</code></pre>
<h3 id="使用存储库安装">使用存储库安装</h3>
<h4 id="更新-apt-包索引">更新 apt 包索引</h4>
<pre><code class="language-bash">sudo apt-get update
</code></pre>
<h4 id="安装包以允许-apt-通过-https-使用存储库">安装包以允许 apt 通过 HTTPS 使用存储库</h4>
<pre><code class="language-bash">sudo apt-get install \
    apt-transport-https \
    ca-certificates \
    curl \
    gnupg-agent \
    software-properties-common
</code></pre>
<h4 id="添加-docker-的官方-gpg-密钥">添加 Docker 的官方 GPG 密钥</h4>
<pre><code class="language-bash">curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
</code></pre>
<p>验证您现在拥有带指纹的密钥</p>
<pre><code class="language-bash">sudo apt-key fingerprint 0EBFCD88
</code></pre>
<h4 id="使用以下命令设置稳定存储库">使用以下命令设置稳定存储库</h4>
<h5 id="x86_64-amd64-架构">x86_64 / amd64 架构</h5>
<pre><code>sudo add-apt-repository \
   &quot;deb [arch=amd64] https://download.docker.com/linux/ubuntu \
   $(lsb_release -cs) \
   stable&quot;
</code></pre>
<p>ubuntu 自己改系统<br>
$(lsb_release -cs) 自己改版本号，否则出各种问题<br>
<a href="https://mirrors.aliyun.com/docker-ce/linux/">阿里源 docker-ce</a></p>
<h5 id="arm-架构">arm 架构</h5>
<pre><code class="language-bash">sudo add-apt-repository \
   &quot;deb [arch=armhf] https://download.docker.com/linux/ubuntu \
   $(lsb_release -cs) \
   stable&quot;
</code></pre>
<p>同上</p>
<h4 id="安装-docker-ce">安装 DOCKER CE</h4>
<pre><code class="language-bash">sudo apt-get update
sudo apt-get install docker-ce docker-ce-cli containerd.io
</code></pre>
<h3 id="将当前用户加入-docker-用户组">将当前用户加入 docker 用户组</h3>
<pre><code class="language-bash">sudo groupadd docker     #添加docker用户组
sudo gpasswd -a $USER docker     #将登陆用户加入到docker用户组中
newgrp docker     #更新用户组
</code></pre>
<h3 id="验证安装">验证安装</h3>
<pre><code>docker ps
</code></pre>
<p>通过运行 hello-world 映像验证是否正确安装了 Docker CE</p>
<h3 id="配置-docker-以在启动时启动">配置 Docker 以在启动时启动</h3>
<pre><code class="language-bash">sudo systemctl enable docker
</code></pre>
<p>取消开机启动</p>
<pre><code class="language-bash">sudo systemctl disable docker
</code></pre>
<h3 id="跟换国内仓库">跟换国内仓库</h3>
<pre><code> sudo vim /etc/docker/daemon.json
</code></pre>
<p>写入</p>
<pre><code>{
 &quot;registry-mirrors&quot;: [&quot;https://registry.docker-cn.com&quot;]
}
</code></pre>
<p>重启 docker</p>
<pre><code>sudo service docker restart
</code></pre>
<h3 id="docker-portainer-单机安装">docker Portainer 单机安装</h3>
<pre><code>docker search portainer
docker pull portainer/portainer
docker run -d -p 9000:9000 \
    --restart=always \
    -v /var/run/docker.sock:/var/run/docker.sock \
    --name prtainer \
    portainer/portainer
</code></pre>
<p>访问地址 IP:PORT，第一次输入用户名及密码</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[hexo]]></title>
        <id>https://569487134xuyi.github.io/post/hexo</id>
        <link href="https://569487134xuyi.github.io/post/hexo">
        </link>
        <updated>2019-06-02T11:30:00.000Z</updated>
        <summary type="html"><![CDATA[<p>github+hexo 搭建</p>
]]></summary>
        <content type="html"><![CDATA[<p>github+hexo 搭建</p>
<!-- more -->
<h1 id="githubhexo-搭建">github+hexo 搭建</h1>
<hr>
<h2 id="github-部分">github 部分</h2>
<p><a href="https://github.com/">github.com</a><br>
github.com 注册<br>
你的 github 地址：github.com/username（你的注册名）<br>
start a project 按钮新建一个 repositories（仓库）<br>
仓库名：username <font color=#008000><strong>(和上面一样，这里不要用别的)</strong></font>.github.io<br>
creat repository 创建仓库</p>
<hr>
<h2 id="git-及-nodejs-安装">git 及 node.js 安装</h2>
<p><a href="https://git-scm.com/">git</a><br>
一直下一步不多说<br>
安装完了右键 git bash</p>
<pre><code class="language-bash">git config user.name 'github用户名'
git config user.email '邮箱'
</code></pre>
<p><a href="https://nodejs.org/en/">node.js</a><br>
下载完一直下一步安装</p>
<pre><code>node -v
npm -v
git -version
</code></pre>
<p>看一下 node.js,npm,git 版本信息<br>
以上没成功，环境变量自己再看下</p>
<hr>
<h2 id="hexo-部分">hexo 部分</h2>
<p><a href="https://hexo.io/zh-cn/">hexo.io</a><br>
右键 git bash here<br>
输入以下</p>
<pre><code class="language-bash">npm install hexo-cli -g
hexo init blog
cd blog
npm install
hexo server
</code></pre>
<p>安装出现 warn 都不要管<br>
上面会自动创建一个 blog 文件夹，进入 blog 并启动 hexo<br>
地址在本地 4000 端口<br>
<a href="http://localhost:4000/">http://localhost:4000/</a></p>
<p>在 blog/source/_posts 下有自动创建的一篇 helloworld 的初始化文章</p>
<p>如果想要添加新的文章，可以在命令行输入 hexo new 'filename',就会生成一个新的.md 文件，对它编辑就可以了</p>
<hr>
<h2 id="上传至-github">上传至 github</h2>
<p>开配置文档_config.yml，对它做如下修改</p>
<pre><code>deploy:
  type: git
  repo: git@github.com:username/username.github.io.git
  branch: master
</code></pre>
<p>git bash 中输入</p>
<pre><code>npm install hexo-deployer-git --save
</code></pre>
<p>安装 git 插件<br>
再输入</p>
<pre><code>hexo g
hexo d
</code></pre>
<p>开始上传<br>
打开 username.github.io blog 就部署好了</p>
<hr>
<p>结束</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Hello Gridea]]></title>
        <id>https://569487134xuyi.github.io/post/hello-gridea</id>
        <link href="https://569487134xuyi.github.io/post/hello-gridea">
        </link>
        <updated>2018-12-11T16:00:00.000Z</updated>
        <summary type="html"><![CDATA[<p>👏  欢迎使用 <strong>Gridea</strong> ！<br>
✍️  <strong>Gridea</strong> 一个静态博客写作客户端。你可以用它来记录你的生活、心情、知识、笔记、创意... ...</p>
]]></summary>
        <content type="html"><![CDATA[<p>👏  欢迎使用 <strong>Gridea</strong> ！<br>
✍️  <strong>Gridea</strong> 一个静态博客写作客户端。你可以用它来记录你的生活、心情、知识、笔记、创意... ...</p>
<!-- more -->
<p><a href="https://github.com/getgridea/gridea">Github</a><br>
<a href="http://hvenotes.fehey.com/">Gridea 主页</a><br>
<a href="http://fehey.com/">示例网站</a></p>
<h2 id="特性">特性👇</h2>
<p>📝  你可以使用最酷的 <strong>Markdown</strong> 语法，进行快速创作</p>
<p>🌉  你可以给文章配上精美的封面图和在文章任意位置插入图片</p>
<p>🏷️  你可以对文章进行标签分组</p>
<p>📋  你可以自定义菜单，甚至可以创建外部链接菜单</p>
<p>💻  你可以在 <strong>𝖶𝗂𝗇𝖽𝗈𝗐𝗌</strong> 或 <strong>𝖬𝖺𝖼𝖮𝖲</strong> 设备上使用此客户端</p>
<p>🌎  你可以使用 <strong>𝖦𝗂𝗍𝗁𝗎𝖻 𝖯𝖺𝗀𝖾𝗌</strong> 或 <strong>Coding Pages</strong> 向世界展示，未来将支持更多平台</p>
<p>💬  你可以进行简单的配置，接入 <a href="https://github.com/gitalk/gitalk">Gitalk</a> 或 <a href="https://github.com/SukkaW/DisqusJS">DisqusJS</a> 评论系统</p>
<p>🇬🇧  你可以使用<strong>中文简体</strong>或<strong>英语</strong></p>
<p>🌁  你可以任意使用应用内默认主题或任意第三方主题，强大的主题自定义能力</p>
<p>🖥  你可以自定义源文件夹，利用 OneDrive、百度网盘、iCloud、Dropbox 等进行多设备同步</p>
<p>🌱 当然 <strong>Gridea</strong> 还很年轻，有很多不足，但请相信，它会不停向前🏃</p>
<p>未来，它一定会成为你离不开的伙伴</p>
<p>尽情发挥你的才华吧！</p>
<p>😘 Enjoy~</p>
]]></content>
    </entry>
</feed>